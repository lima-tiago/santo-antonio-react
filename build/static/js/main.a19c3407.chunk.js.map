{"version":3,"sources":["assets/images/brands/capa.svg","components/UI/Spinner/Spinner.js","assets/images/brands/footer.png","AppRouter.js","components/Sections/Navbar/index.js","components/Sections/Footer/index.js","components/UI/ScrollTop/ScrollTop.js","hoc/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Spinner","props","className","classNames","style","height","fullscreen","width","color","Home","React","lazy","Error404","HipicaHome","HipicaHistoria","HipicaEquipe","HipicaIntegrante","HipicaCavalos","HipicaCavalo","HipicaResultados","HipicaEventos","HipicaMidia","SitioHome","SitioHistoria","SitioQuemSomos","SitioPaddock","SitioFauna","SitioFlora","SitioTour","withRouter","location","routes","path","name","Component","exact","timeout","map","key","Helmet","fallback","useState","isToggled","setIsToggled","IOS","test","navigator","userAgent","window","MSStream","clickLink","animateScroll","scrollToTop","duration","Fragment","onClick","to","src","brandImage","alt","pathname","label","i","index","data-key","isActive","match","Footer","require","ScrollTop","scroll","data-visible","showTemplate","includes","children","App","basename","content","http-equiv","NAME","CONTENT","property","Boolean","hostname","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a19c3407.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/capa.0c6344d5.svg\";","import React from 'react';\r\n\r\nimport './Spinner.scss';\r\n\r\nconst Spinner = (props) => {\r\n    return (\r\n        <div\r\n            className={props.classNames}\r\n            style={{\r\n            height: props.fullscreen\r\n                ? '100vh'\r\n                : 'unset',\r\n            width: props.fullscreen\r\n                ? '100vw'\r\n                : 'unset'\r\n        }}>\r\n            <div className={`Spinner color-${props.color}`}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","module.exports = __webpack_public_path__ + \"static/media/footer.112ab5e1.png\";","import React, {Suspense} from 'react'\r\nimport {Route, Switch, withRouter} from 'react-router-dom'\r\nimport PageTransition from 'react-router-page-transition'\r\nimport {Helmet} from \"react-helmet\"\r\n\r\nimport Spinner from './components/UI/Spinner/Spinner'\r\n// Import Containers (Pages)\r\nconst Home = React.lazy(() => import ('containers/Home'))\r\nconst Error404 = React.lazy(() => import ('containers/Error/404'))\r\n\r\n// Hipica\r\nconst HipicaHome = React.lazy(() => import ('containers/hipica/Home'))\r\nconst HipicaHistoria = React.lazy(() => import ('containers/hipica/Historia'))\r\nconst HipicaEquipe = React.lazy(() => import ('containers/hipica/Equipe'))\r\nconst HipicaIntegrante = React.lazy(() => import ('containers/hipica/Integrante'))\r\nconst HipicaCavalos = React.lazy(() => import ('containers/hipica/Cavalos'))\r\nconst HipicaCavalo = React.lazy(() => import ('containers/hipica/Cavalo'))\r\nconst HipicaResultados = React.lazy(() => import ('containers/hipica/Resultados'))\r\nconst HipicaEventos = React.lazy(() => import ('containers/hipica/Eventos'))\r\nconst HipicaMidia = React.lazy(() => import ('containers/hipica/Midia'))\r\n\r\n// Sitio\r\nconst SitioHome = React.lazy(() => import ('containers/sitio/Home'))\r\nconst SitioHistoria = React.lazy(() => import ('containers/sitio/Historia'))\r\nconst SitioQuemSomos = React.lazy(() => import ('containers/sitio/Quemsomos'))\r\nconst SitioPaddock = React.lazy(() => import ('containers/sitio/Paddock'))\r\nconst SitioFauna = React.lazy(() => import ('containers/sitio/Fauna'))\r\nconst SitioFlora = React.lazy(() => import ('containers/sitio/Flora'))\r\nconst SitioTour = React.lazy(() => import ('containers/sitio/Tour'))\r\n\r\nconst AppRouter = ({location}) => {\r\n    const routes = [\r\n        {\r\n            path: '/',\r\n            name: 'Home',\r\n            Component: Home,\r\n            exact: true\r\n        },\r\n\r\n        // Hipica\r\n        {\r\n            path: '/hipica',\r\n            name: 'Hípica',\r\n            Component: HipicaHome,\r\n            exact: true\r\n\r\n        }, {\r\n            path: '/hipica/historia',\r\n            name: 'História',\r\n            Component: HipicaHistoria,\r\n            exact: true\r\n\r\n        }, {\r\n            path: '/hipica/equipe',\r\n            name: 'Equipe',\r\n            Component: HipicaEquipe,\r\n            exact: true\r\n\r\n        }, {\r\n            path: '/hipica/integrante/:id',\r\n            name: 'Integrante',\r\n            Component: HipicaIntegrante,\r\n            exact: false\r\n\r\n        }, {\r\n            path: '/hipica/cavalos',\r\n            name: 'Cavalos',\r\n            Component: HipicaCavalos,\r\n            exact: true\r\n\r\n        }, {\r\n            path: '/hipica/cavalo/:id',\r\n            name: 'Cavalo',\r\n            Component: HipicaCavalo,\r\n            exact: false\r\n        }, {\r\n            path: '/hipica/resultados',\r\n            name: 'Resultados',\r\n            Component: HipicaResultados,\r\n            exact: true\r\n        }, {\r\n            path: '/hipica/eventos',\r\n            name: 'Eventos',\r\n            Component: HipicaEventos,\r\n            exact: true\r\n        }, {\r\n            path: '/hipica/midia',\r\n            name: 'Midia',\r\n            Component: HipicaMidia,\r\n            exact: true\r\n        },\r\n\r\n        // Sitio\r\n        {\r\n            path: '/sitio',\r\n            name: 'Sítio',\r\n            Component: SitioHome,\r\n            exact: true\r\n        }, {\r\n            path: '/sitio/historia',\r\n            name: 'Histõria',\r\n            Component: SitioHistoria,\r\n            exact: true\r\n        }, {\r\n            path: '/sitio/quemsomos',\r\n            name: 'Quem Somos',\r\n            Component: SitioQuemSomos,\r\n            exact: true\r\n        }, {\r\n            path: '/sitio/paddock',\r\n            name: 'Paddock',\r\n            Component: SitioPaddock,\r\n            exact: true\r\n        }, {\r\n            path: '/sitio/fauna',\r\n            name: 'Fauna',\r\n            Component: SitioFauna,\r\n            exact: true\r\n        }, {\r\n            path: '/sitio/flora',\r\n            name: 'Flora',\r\n            Component: SitioFlora,\r\n            exact: true\r\n        }, {\r\n            path: '/sitio/tour',\r\n            name: 'Tour',\r\n            Component: SitioTour,\r\n            exact: true\r\n        }, {\r\n            path: '/',\r\n            name: 'Erro 404',\r\n            Component: Error404,\r\n            exact: false\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <PageTransition timeout={800}>\r\n            <Switch location={location}>\r\n                {routes.map(({path, Component, name, exact}) => (\r\n                    <Route key={name} exact={exact} path={path}>\r\n                        <div className=\"page transition-item\">\r\n                            <Helmet>\r\n                                <title>Santo Antônio • {name}</title>\r\n                            </Helmet>\r\n                            <Suspense fallback={<Spinner fullscreen />}>\r\n                                <Component/>\r\n                            </Suspense>\r\n                        </div>\r\n                    </Route>\r\n                ))}\r\n            </Switch>\r\n        </PageTransition>\r\n    )\r\n}\r\n\r\nexport default withRouter(AppRouter);\r\n","import React, {useState, useEffect} from 'react'\r\nimport {NavLink, withRouter, Link} from 'react-router-dom'\r\nimport {animateScroll} from 'react-scroll'\r\n\r\nimport brandImage from '../../../assets/images/brands/capa.svg'\r\nimport './styles.scss';\r\n\r\nconst Navbar = ({location}) => {\r\n    const [isToggled,\r\n        setIsToggled] = useState(false);\r\n    const IOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\r\n\r\n    const toggleMenu = () => {\r\n        setIsToggled(!isToggled);\r\n    }\r\n\r\n    const sitioItems = [\r\n        {\r\n            key: '/sitio/historia',\r\n            label: 'História'\r\n        }, {\r\n            key: '/sitio/quemsomos',\r\n            label: 'Quem Somos'\r\n        }, {\r\n            key: '/sitio/paddock',\r\n            label: 'Paddock'\r\n        }, {\r\n            label: 'Fauna',\r\n            key: '/sitio/fauna'\r\n        }, {\r\n            label: 'Flora',\r\n            key: '/sitio/flora'\r\n        }, {\r\n            label: 'Tour',\r\n            key: '/sitio/tour'\r\n        }\r\n    ];\r\n\r\n    const hipicaItems = [\r\n        {\r\n            key: '/hipica/historia',\r\n            label: 'História'\r\n        }, {\r\n            key: '/hipica/equipe',\r\n            label: 'Equipe',\r\n            isActive: (match,location) => {\r\n                return /equipe/.test(location.pathname) ||  /integrante/.test(location.pathname)\r\n            }\r\n        }, {\r\n            key: '/hipica/cavalos',\r\n            label: 'Cavalos',\r\n            isActive: (match,location) => {\r\n                return /cavalo/.test(location.pathname)\r\n            }\r\n        }, {\r\n            label: 'Resultados',\r\n            key: '/hipica/resultados'\r\n        }, {\r\n            label: 'Eventos',\r\n            key: '/hipica/eventos'\r\n        }, {\r\n            label: 'Mídia',\r\n            key: '/hipica/midia'\r\n        }\r\n    ];\r\n\r\n    const clickLink = () => {\r\n        animateScroll.scrollToTop({duration: 200});\r\n        setIsToggled(false);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div\r\n                className={`Navbar__toggler ${isToggled\r\n                ? 'toggled'\r\n                : ''}`}>\r\n                <button\r\n                    className={`${isToggled\r\n                    ? 'active'\r\n                    : ''} ${IOS\r\n                        ? 'ios'\r\n                        : ''}`}\r\n                    onClick={() => toggleMenu()}>\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                </button>\r\n\r\n                <NavLink className=\"Navbar__toggler-home\" to=\"/\">\r\n                    <img src={brandImage} alt=\"Logomarca Santo Antonio\"/>\r\n                </NavLink>\r\n            </div>\r\n            <nav\r\n                className={`Navbar ${isToggled\r\n                ? 'toggled'\r\n                : ''}`}>\r\n                    \r\n                <div className=\"container\">\r\n                    <div\r\n                        className={`Navbar__content ${isToggled\r\n                        ? 'toggled'\r\n                        : ''} ${IOS\r\n                            ? 'ios'\r\n                            : ''}`}>\r\n\r\n                        <div className=\"Navbar__left\">\r\n                            <div className=\"Navbar__brand\">\r\n                                <NavLink to=\"/\">\r\n                                    <img src={brandImage} alt=\"Logomarca Santo Antonio\"/>\r\n                                </NavLink>\r\n                            </div>\r\n\r\n                            <div className=\"Navbar__div\"></div>\r\n\r\n                            <Link className=\"Navbar__caption\" to={/sitio/.test(location.pathname) ? '/sitio' : '/hipica'}>\r\n                            {/sitio/.test(location.pathname) && 'Sítio'}\r\n                            {/hipica/.test(location.pathname) && 'Equipe Hípica'}\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"Navbar__links\">\r\n                            {/sitio/.test(location.pathname) &&\r\n                            (<>\r\n                                {sitioItems.map((i, index) => (\r\n                                    <NavLink\r\n                                        data-key={i.key}\r\n                                        className={`Navbar__item`}\r\n                                        key={i.key}\r\n                                        to={i.key}\r\n                                        onClick={() => clickLink()}>\r\n                                        {i.label}\r\n                                    </NavLink>                                \r\n                                ))}\r\n\r\n                                <Link className={`Navbar__button`}\r\n                                    to=\"/hipica\">\r\n                                    Conheça a Equipe Hípica\r\n                                </Link>'\r\n                            </>)}\r\n\r\n                            {/hipica/.test(location.pathname) &&\r\n                            (<>\r\n                                {hipicaItems.map((i, index) => (\r\n                                    <NavLink\r\n                                        data-key={i.key}\r\n                                        className={`Navbar__item`}\r\n                                        key={i.key}\r\n                                        to={i.key}\r\n                                        isActive={i.isActive}\r\n                                        onClick={() => clickLink()}>\r\n                                        {i.label}\r\n                                    </NavLink>                                \r\n                                ))}\r\n\r\n                                <Link className={`Navbar__button`}\r\n                                    to=\"/sitio\">\r\n                                    Conheça o Sítio\r\n                                </Link>'\r\n                            </>)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withRouter(Navbar);","import React from 'react';\r\n\r\nimport './styles.scss';\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <footer className=\"Footer wow fadeInUp\">\r\n           <img className=\"Footer__brand\" src={require('../../../assets/images/brands/footer.png')}/>\r\n           <hr/>\r\n           <p className=\"Footer__copy\">\r\n           © 2020 Sítio Santo Antônio. Todos os direitos reservados.\r\n           </p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, {useState} from 'react';\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nimport './ScrollTop.scss';\r\n\r\nconst ScrollTop = props => {\r\n    // const [isVisible,\r\n    //     setIsVisible] = useState(false);\r\n\r\n    // const watchSticky = () => {\r\n    //     function handleScroll() {\r\n    //         if (window.scrollY > 200) {\r\n    //             if (isVisible === false) {\r\n    //                 setIsVisible(true);\r\n    //             }\r\n\r\n    //         } else {\r\n    //             if (isVisible === true) {\r\n    //                 setIsVisible(false);\r\n    //             }\r\n    //         }\r\n    //     }\r\n\r\n    //     window.addEventListener('scroll', handleScroll);\r\n    // };\r\n    // watchSticky();\r\n\r\n    const scrollToTop = () => {\r\n        scroll.scrollToTop();\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <button onClick={scrollToTop} className=\"ScrollTop\" data-visible={true}>\r\n                <span className=\"ico\"></span>\r\n            </button>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ScrollTop;","import React from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nimport Navbar from '../../components/Sections/Navbar';\r\nimport Footer from '../../components/Sections/Footer';\r\nimport ScrollTop from 'components/UI/ScrollTop/ScrollTop';\r\n\r\nconst Layout = props => {\r\n    const showTemplate = !['/', '/sitio', '/hipica'].includes(props.location.pathname)\r\n    return (\r\n        <React.Fragment>\r\n            {showTemplate && <Navbar/>}\r\n            <main>\r\n                {props.children}\r\n            </main>\r\n            {showTemplate &&  <Footer/>}\r\n            {showTemplate &&  <ScrollTop/>}\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default withRouter(Layout);","import React from 'react'\r\nimport {Helmet} from \"react-helmet\"\r\nimport {BrowserRouter} from 'react-router-dom'\r\n\r\nimport AppRouter from './AppRouter'\r\nimport Layout from 'hoc/Layout/Layout'\r\n\r\nimport './App.scss'\r\nimport 'assets/scss/util/__CSSTransitions.scss'\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <BrowserRouter basename=\"/\">\r\n            <Helmet>\r\n                <title>Santo Antônio</title>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Conheça o Sítio e Hípica Santo Antônio.\"/>\r\n\r\n                <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\r\n                <meta name=\"keywords\" content=\"\"/>\r\n                <meta NAME=\"Googlebot\" CONTENT=\"index,follow\"/>\r\n                <meta NAME=\"robots\" CONTENT=\"index,follow\"/>\r\n                <meta NAME=\"Identifier-URL\" CONTENT=\"http://www.\"/>\r\n                <meta NAME=\"url\" CONTENT=\"http://www.\"/>\r\n                <meta NAME=\"Language\" CONTENT=\"PT-BR\"/>\r\n                <meta NAME=\"content-language\" CONTENT=\"pt-br\"/>\r\n                <meta NAME=\"distribution\" CONTENT=\"Global\"/>\r\n                <meta NAME=\"coverage\" CONTENT=\"Worldwide\"/>\r\n                <meta NAME=\"Author\" CONTENT=\"Sorocabacom.com\"/>\r\n                <meta NAME=\"Generator\" CONTENT=\"\"/>\r\n                <meta name=\"description\" content=\"\"/>\r\n\r\n                <meta property=\"og:title\" content=\"Title\"/>\r\n                <meta property=\"og:description\" content=\"\"/>\r\n                <meta property=\"og:image\" content=\"http://www.\"/>\r\n                <meta property=\"og:url\" content=\"http://www.\"/>\r\n                <meta property=\"og:type\" content=\"website\"/>\r\n                <meta name=\"twitter:card\" content=\"summary_large_image\"/>\r\n                <meta property=\"og:site_name\" content=\"dom.com.br\"/>\r\n                <meta name=\"twitter:image:alt\" content=\"Title\"/>\r\n                <meta property=\"fb:app_id\" content=\"_app_id\"/>\r\n                <meta name=\"twitter:site\" content=\"@app\"/>\r\n            </Helmet>\r\n\r\n            <Layout>\r\n                <AppRouter/>\r\n            </Layout>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}